{"version":3,"sources":["actions.ts","Components/ListMovieItem.tsx","Components/ViewMovieInfo.tsx","Components/ListMovie.tsx","Components/ListTops.tsx","Components/SearchMovie.tsx","App.tsx","reducer.ts","index.tsx"],"names":["setListMovie","data","type","listMovie","setRequestUrl","types","title","typeUrl","requestUrl","titleList","seInfoMovie","infoMovie","ListMovieItem","dispatch","useDispatch","ratingHide","rating","apiMovie","reques","a","apiHeadersKey","fetch","headers","api_url","json","className","onClick","filmId","src","posterUrlPreview","alt","nameRu","year","genres","genre","ViewMovieInfo","useSelector","store","portalDiv","document","querySelector","closeModal","ReactDOM","createPortal","posterUrl","countries","map","el","country","join","slogan","filmLength","description","ListMovie","showInfoModal","slice","i","loadingModal","ListTops","REQUESTS","url","SearchMovie","placeholder","onChange","e","preventDefault","target","value","App","typesList","api","typeArr","baseUrl","console","log","useEffect","Object","keys","length","initialState","createStore","state","action","render","StrictMode","getElementById"],"mappings":"oOAAO,SAASA,EAAaC,GACzB,MAAO,CACHC,KAAM,iBACNC,UAAWF,GAGZ,SAASG,EAAcC,EAAeJ,EAAcK,EAAeC,GACtE,MAAO,CACHL,KAAM,kBACNG,MAAOA,EACPG,WAAYP,EACZQ,UAAYH,EACZC,QAASA,GAGV,SAASG,EAAYT,GACxB,MAAO,CACHC,KAAM,iBACNS,UAAWV,G,uBCoBJW,EA7BiC,SAAC,GAAY,IAAXX,EAAU,EAAVA,KACxCY,EAAWC,cACXC,EAAcd,EAAKe,OAAmB,GAAV,QAE5BC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACG,sDACVC,EAA6B,CAAC,YAAa,wCAFpC,SAISC,MAHN,sDAGsBH,EAAQ,CAACI,QAASF,IAJ3C,cAIPG,EAJO,gBAKMA,EAAQC,OALd,OAKPvB,EALO,OAMbY,EAASH,EAAYT,IANR,2CAAH,sDASd,OACI,qBAAKwB,UAAU,OAAOC,QAAS,kBAAMT,EAAShB,EAAK0B,SAAnD,SACI,sBAAKF,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAW,SAAWV,EAA5B,SAAyCd,EAAKe,SAC9C,qBAAKY,IAAK3B,EAAK4B,iBAAkBC,IAAI,QAEzC,qBAAKL,UAAU,QAAf,SAAwBxB,EAAK8B,SAC7B,sBAAKN,UAAU,OAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBxB,EAAK+B,OAC7B,sBAAMP,UAAU,SAAhB,SAA0BxB,EAAKgC,OAAO,GAAKhC,EAAKgC,OAAO,GAAGC,MAAQ,cCcvEC,EAxCO,WAClB,IAAMtB,EAAWC,cACXH,EAAYyB,aAAY,SAACC,GAAD,OAAwBA,EAAM1B,aACtD2B,EAAYC,SAASC,cAAc,QACnCC,EAAa,WACf5B,EFWG,CACHX,KAAM,qBETV,OAAOwC,IAASC,aACZ,qCACI,qBAAKlB,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAQC,QAASe,EAAhC,eACA,sBAAKhB,UAAU,aAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKG,IAAKjB,EAAUiC,UAAWd,IAAKnB,EAAUoB,WAElD,sBAAKN,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBd,EAAUoB,SAClC,sBAAKN,UAAU,YAAf,0GAA8Cd,EAAUqB,QACxD,sBACIP,UAAU,iBADd,mDACwCd,EAAUkC,UAAUC,KAAI,SAACC,GAAD,OAAQA,EAAGC,WAASC,KAAK,SACzF,sBACIxB,UAAU,cADd,uCACmCd,EAAUsB,OAAOa,KAAI,SAACC,GAAD,OAAQA,EAAGb,SAAOe,KAAK,SAC/E,sBAAKxB,UAAU,cAAf,mDAAsCd,EAAUuC,UAChD,sBAAKzB,UAAU,YAAf,6CAAmCd,EAAUwC,WAA7C,gCAGR,sBAAK1B,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,8DACCd,EAAUyC,oBAIvB,qBAAK3B,UAAU,WAAWC,QAASe,OAEvCH,ICZOe,EAxBG,WACd,IAAM5C,EAAY2B,aAAY,SAACC,GAAD,OAAwBA,EAAM5B,aACtDN,EAAYiC,aAAY,SAACC,GAAD,OAAwBA,EAAMlC,aACtDmD,EAAgBlB,aAAY,SAACC,GAAD,OAAwBA,EAAMiB,iBAQhE,OACI,qCACI,sBAAK7B,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBhB,IACxB,qBAAKgB,UAAU,QAAf,SACKtB,EAAUoD,MAAM,EAAG,IAAIT,KAAI,SAACC,EAAIS,GAAL,OAAW,cAAC,EAAD,CAAuBvD,KAAM8C,GAATS,WAXtD,SAACvD,GAClB,GAAIA,EACA,OAAO,cAAC,EAAD,IAYNwD,CAAaH,OCmBXI,EAxCE,WACb,IAAM7C,EAAWC,cAEX6C,EACI,CACFzD,KAAM,QACN0D,IAAK,8BACLtD,MAAO,yGAJTqD,EAMK,CACHzD,KAAM,QACN0D,IAAK,iCACLtD,MAAO,iIATTqD,EAWK,CACHzD,KAAM,QACN0D,IAAK,2BACLtD,MAAO,2HASf,OACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,QAAf,UACI,wBAAQA,UAAU,MACVC,QAAS,kBAAMb,EAAST,EAAcuD,EAAczD,KAAMyD,EAAcC,IAAKD,EAAcrD,MA5B/F,KA2BJ,SACsHqD,EAAcrD,QACpI,wBAAQmB,UAAU,MACVC,QAAS,kBAAMb,EAAST,EAAcuD,EAAezD,KAAMyD,EAAeC,IAAKD,EAAerD,MA9BlG,KA6BJ,SACyHqD,EAAerD,QACxI,wBAAQmB,UAAU,MACVC,QAAS,kBAAMb,EAAST,EAAcuD,EAAezD,KAAMyD,EAAeC,IAAKD,EAAerD,MAhClG,KA+BJ,SACyHqD,EAAerD,cCXzIuD,EAvBK,WAChB,IAAMhD,EAAWC,cAQjB,OACI,qBAAKW,UAAU,WAAf,SACI,qBAAKA,UAAU,OAAf,SACI,uBACIvB,KAAK,OACL4D,YAAY,mIACZC,SAXK,SAACC,GAClBA,EAAEC,iBACFpD,EAAST,EAAc,QAAS,6BAA+B4D,EAAEE,OAAOC,MAAO,kCAJnE,YCuELC,EAnEH,WACR,IA2BoBnE,EA3BdY,EAAWC,cACXuD,EAAYjC,aAAY,SAACC,GAAD,OAAwBA,EAAMgC,aACtDlE,EAAYiC,aAAY,SAACC,GAAD,OAAwBA,EAAMlC,aACtDI,EAAU6B,aAAY,SAACC,GAAD,OAAwBA,EAAM9B,WACpDC,EAAa4B,aAAY,SAACC,GAAD,OAAwBA,EAAM7B,cAEvD8D,EAAG,uCAAG,WAAOpD,EAAgBqD,EAAiBhE,GAAxC,qBAAAY,EAAA,sDAEFC,EAA6B,CAAC,YAAa,wCAFzC,KAIAb,EAJA,OAKC,IALD,OAQC,IARD,6BAMAiE,EAAU,sDANV,mCASAA,EAAU,sDATV,mCAYAA,EAAU,sDACVC,QAAQC,IAAI,yBAbZ,8CAgBcrD,MAAMmD,EAAUtD,EAAQ,CAACI,QAASF,IAhBhD,eAgBFG,EAhBE,iBAiBWA,EAAQC,OAjBnB,QAiBFvB,EAjBE,OAkBRY,EAASb,EAAaC,EAAKsE,KAlBnB,4CAAH,0DAiCT,OAJAI,qBAAU,WACNL,EAAI9D,EAAY6D,EAAW9D,KAC5B,CAACC,IAGA,qCACI,iCACI,qBAAKiB,UAAU,YAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,QAAf,2CAA4B,sBAAMA,UAAU,MAAhB,+CAIxC,+BACI,0BAASA,UAAU,YAAnB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,KAxBIxB,EAyBQE,EAxBpByE,OAAOC,KAAK5E,GAAM6E,OACX,cAAC,EAAD,IAEA,gGAwBP,iCACI,qBAAKrD,UAAU,YAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,OAAf,0BAAgC,sBAAMA,UAAU,OAAhB,+B,eCnElDsD,EAA4B,CAC9B5E,UAAW,GACXM,UAAW,wGACX4D,UAAW,QACX9D,QAAS,EACTC,WAAY,8BACZG,UAAW,CACPgB,OAAQ,EACRX,OAAQ,GACR4B,UAAW,GACXb,OAAQ,GACRC,KAAM,GACNkB,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbnB,OAAQ,CAAC,CAACC,MAAO,KACjBW,UAAW,CAAC,CAACG,QAAS,MAE1BM,eAAe,GCbnB,IAAMjB,EAAQ2C,aDgBC,WAAyD,IAAxCC,EAAuC,uDAA/BF,EAAcG,EAAiB,uCACnE,OAAQA,EAAOhF,MACX,IAAK,iBACD,OAAO,2BACA+E,GADP,IAEI9E,UAAW+E,EAAO/E,YAE1B,IAAK,kBACD,OAAO,2BACA8E,GADP,IAEIZ,UAAWa,EAAO7E,MAClBG,WAAY0E,EAAO1E,WACnBC,UAAWyE,EAAOzE,UAClBF,QAAS2E,EAAO3E,UAExB,IAAK,iBACD,OAAO,2BACA0E,GADP,IAEItE,UAAWuE,EAAOvE,UAClB2C,eAAe,IAEvB,IAAK,kBACD,OAAO,2BACA2B,GADP,IAEI3B,eAAe,IAEvB,QACI,OAAO2B,MCzCnBvC,IAASyC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRE,SAAS8C,eAAe,W","file":"static/js/main.48f93d65.chunk.js","sourcesContent":["export function setListMovie(data: object[]) {\r\n    return {\r\n        type: 'SET_LIST_MOVIE',\r\n        listMovie: data,\r\n    }\r\n}\r\nexport function setRequestUrl(types: string, data: string, title: string, typeUrl: number) {\r\n    return {\r\n        type: 'SET_REQUEST_URL',\r\n        types: types,\r\n        requestUrl: data,\r\n        titleList : title,\r\n        typeUrl: typeUrl,\r\n    }\r\n}\r\nexport function seInfoMovie(data: object[]) {\r\n    return {\r\n        type: 'SET_INFO_MOVIE',\r\n        infoMovie: data,\r\n    }\r\n}\r\nexport function hideShowInfoModal() {\r\n    return {\r\n        type: 'HIDE_SHOW_MODAL',\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {seInfoMovie} from '../actions';\r\nimport {DataListInfo} from \"../types\"\r\n\r\ninterface IListMovieItem {\r\n    data: DataListInfo\r\n}\r\n\r\nconst ListMovieItem: React.FC<IListMovieItem> = ({data}) => {\r\n    const dispatch = useDispatch();\r\n    const ratingHide = !data.rating ? ' hide' : '';\r\n\r\n    const apiMovie = async (reques: number) => {\r\n        const baseUrl = 'https://kinopoiskapiunofficial.tech/api/v2.2/films/';\r\n        const apiHeadersKey: HeadersInit = {'X-API-KEY': '943156f1-51e2-4bba-9657-e25705632abd'};\r\n\r\n        const api_url = await fetch(baseUrl + reques, {headers: apiHeadersKey});\r\n        const data = await api_url.json();\r\n        dispatch(seInfoMovie(data));\r\n    };\r\n\r\n    return (\r\n        <div className=\"item\" onClick={() => apiMovie(data.filmId)}>\r\n            <div className=\"item_wrap\">\r\n                <div className=\"img\">\r\n                    <span className={'rating' + ratingHide}>{data.rating}</span>\r\n                    <img src={data.posterUrlPreview} alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">{data.nameRu}</div>\r\n                <div className=\"info\">\r\n                    <span className=\"year\">{data.year}</span>\r\n                    <span className=\"genres\">{data.genres[0] ? data.genres[0].genre : ''}</span>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n};\r\n\r\nexport default ListMovieItem\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {IReduxState} from \"../types\"\r\nimport {hideShowInfoModal} from '../actions'\r\n\r\nconst ViewMovieInfo = () => {\r\n    const dispatch = useDispatch();\r\n    const infoMovie = useSelector((store: IReduxState) => store.infoMovie);\r\n    const portalDiv = document.querySelector('main')!;\r\n    const closeModal = () => {\r\n        dispatch(hideShowInfoModal());\r\n    };\r\n\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div className=\"modal_box\">\r\n                <div className=\"modal_wrap\">\r\n                    <div className=\"close\" onClick={closeModal}>x</div>\r\n                    <div className=\"modal_info\">\r\n                        <div className=\"img\">\r\n                            <img src={infoMovie.posterUrl} alt={infoMovie.nameRu}/>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <div className=\"title\">{infoMovie.nameRu}</div>\r\n                            <div className=\"item date\">Год производства: {infoMovie.year}</div>\r\n                            <div\r\n                                className=\"item countries\">Страна: {infoMovie.countries.map((el) => el.country).join(', ')}</div>\r\n                            <div\r\n                                className=\"item genres\">Жанр: {infoMovie.genres.map((el) => el.genre).join(', ')}</div>\r\n                            <div className=\"item slogan\">Слоган: {infoMovie.slogan}</div>\r\n                            <div className=\"item time\">Время: {infoMovie.filmLength} мин.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <div className=\"title\">Описание</div>\r\n                        {infoMovie.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal_bg\" onClick={closeModal}></div>\r\n        </>,\r\n        portalDiv\r\n    )\r\n};\r\n\r\nexport default ViewMovieInfo\r\n","import React from \"react\";\r\nimport ListMovieItem from \"./ListMovieItem\";\r\nimport ViewMovieInfo from \"./ViewMovieInfo\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {IReduxState} from \"../types\"\r\n\r\nconst ListMovie = () => {\r\n    const titleList = useSelector((store: IReduxState) => store.titleList);\r\n    const listMovie = useSelector((store: IReduxState) => store.listMovie);\r\n    const showInfoModal = useSelector((store: IReduxState) => store.showInfoModal);\r\n\r\n    const loadingModal = (data: boolean) => {\r\n        if (data) {\r\n            return <ViewMovieInfo/>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"listMovie\">\r\n                <div className=\"title\">{titleList}</div>\r\n                <div className=\"items\">\r\n                    {listMovie.slice(0, 20).map((el, i) => <ListMovieItem key={i} data={el}/>)}\r\n                </div>\r\n            </div>\r\n            {loadingModal(showInfoModal)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListMovie\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setRequestUrl} from \"../actions\";\r\n\r\nconst ListTops = () => {\r\n    const dispatch = useDispatch();\r\n    const typeUrl = 2; //Версия API\r\n    const REQUESTS = {\r\n        best: {\r\n            type: \"films\",\r\n            url: \"top?type=TOP_250_BEST_FILMS\",\r\n            title: \"Топ-20 лучших фильмов\",\r\n        },\r\n        popul: {\r\n            type: \"films\",\r\n            url: \"top?type=TOP_100_POPULAR_FILMS\",\r\n            title: \"Топ-20 популярных фильмов\",\r\n        },\r\n        await: {\r\n            type: \"films\",\r\n            url: \"top?type=TOP_AWAIT_FILMS\",\r\n            title: \"Топ-20 ожидаемых фильмов\",\r\n        },\r\n        premieres: {\r\n            type: \"items\",\r\n            url: \"premieres?year=2021&month=OCTOBER\",\r\n            title: \"Топ-20 кинопремьер\",\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"listTops\">\r\n            <div className=\"items\">\r\n                <button className=\"btn\"\r\n                        onClick={() => dispatch(setRequestUrl(REQUESTS.best.type, REQUESTS.best.url, REQUESTS.best.title, typeUrl))}>{REQUESTS.best.title}</button>\r\n                <button className=\"btn\"\r\n                        onClick={() => dispatch(setRequestUrl(REQUESTS.popul.type, REQUESTS.popul.url, REQUESTS.popul.title, typeUrl))}>{REQUESTS.popul.title}</button>\r\n                <button className=\"btn\"\r\n                        onClick={() => dispatch(setRequestUrl(REQUESTS.await.type, REQUESTS.await.url, REQUESTS.popul.title, typeUrl))}>{REQUESTS.popul.title}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListTops\r\n","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setRequestUrl} from \"../actions\";\r\n\r\nconst SearchMovie = () => {\r\n    const dispatch = useDispatch();\r\n    const typeUrl = 1; //Версия API\r\n\r\n    const handleSubmit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        dispatch(setRequestUrl(\"films\", \"search-by-keyword?keyword=\" + e.target.value, \"Поиск:\", typeUrl));\r\n    };\r\n\r\n    return (\r\n        <div className=\"form_box\">\r\n            <div className=\"line\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Введите название фильма\"\r\n                    onChange={handleSubmit}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SearchMovie\r\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setListMovie} from './actions'\nimport './styles/reset.css'\nimport './styles/base.scss'\nimport ListMovie from \"./Components/ListMovie\";\nimport ListTops from \"./Components/ListTops\";\nimport SearchMovie from \"./Components/SearchMovie\";\nimport {IReduxState} from \"./types\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const typesList = useSelector((store: IReduxState) => store.typesList);\n    const listMovie = useSelector((store: IReduxState) => store.listMovie);\n    const typeUrl = useSelector((store: IReduxState) => store.typeUrl);\n    const requestUrl = useSelector((store: IReduxState) => store.requestUrl);\n\n    const api = async (reques: string, typeArr: string, typeUrl: number) => {\n        let baseUrl: string;\n        const apiHeadersKey: HeadersInit = {'X-API-KEY': '943156f1-51e2-4bba-9657-e25705632abd'};\n\n        switch (typeUrl) {\n            case 1:\n                baseUrl = 'https://kinopoiskapiunofficial.tech/api/v2.1/films/';\n                break;\n            case 2:\n                baseUrl = 'https://kinopoiskapiunofficial.tech/api/v2.2/films/';\n                break;\n            default:\n                baseUrl = 'https://kinopoiskapiunofficial.tech/api/v2.1/films/';\n                console.log('Упс...');\n                break;\n        }\n        const api_url = await fetch(baseUrl + reques, {headers: apiHeadersKey});\n        const data = await api_url.json();\n        dispatch(setListMovie(data[typeArr]));\n    };\n\n    const loadingApp = (data: object[]) => {\n        if (Object.keys(data).length) {\n            return <ListMovie/>\n        } else {\n            return <div>Не найдено</div>\n        }\n    };\n\n    useEffect(() => {\n        api(requestUrl, typesList, typeUrl);\n    }, [requestUrl]);\n\n    return (\n        <>\n            <header>\n                <div className=\"container\">\n                    <div className=\"header\">\n                        <div className=\"title\">Поиск<span className=\"red\">кино</span></div>\n                    </div>\n                </div>\n            </header>\n            <main>\n                <article className=\"container\">\n                    <SearchMovie/>\n                    <ListTops/>\n                    {loadingApp(listMovie)}\n                </article>\n            </main>\n            <footer>\n                <div className=\"container\">\n                    <div className=\"footer\">\n                        <div className=\"copy\">©Jenjarus <span className=\"year\">2077</span></div>\n                    </div>\n                </div>\n            </footer>\n        </>\n    );\n};\n\nexport default App\n\n","import {IReduxState, IAction} from \"./types\"\r\n\r\nconst initialState: IReduxState = {\r\n    listMovie: [],\r\n    titleList: \"Топ 20 лучших фильмов\",\r\n    typesList: \"films\",\r\n    typeUrl: 2,\r\n    requestUrl: \"top?type=TOP_250_BEST_FILMS\",\r\n    infoMovie: {\r\n        filmId: 0,\r\n        rating: \"\",\r\n        posterUrl: \"\",\r\n        nameRu: \"\",\r\n        year: \"\",\r\n        slogan: \"\",\r\n        filmLength: \"\",\r\n        description: \"\",\r\n        genres: [{genre: \"\"}],\r\n        countries: [{country: \"\"}],\r\n    },\r\n    showInfoModal: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action: IAction) {\r\n    switch (action.type) {\r\n        case 'SET_LIST_MOVIE':\r\n            return {\r\n                ...state,\r\n                listMovie: action.listMovie,\r\n            };\r\n        case 'SET_REQUEST_URL':\r\n            return {\r\n                ...state,\r\n                typesList: action.types,\r\n                requestUrl: action.requestUrl,\r\n                titleList: action.titleList,\r\n                typeUrl: action.typeUrl,\r\n            };\r\n        case 'SET_INFO_MOVIE':\r\n            return {\r\n                ...state,\r\n                infoMovie: action.infoMovie,\r\n                showInfoModal: true,\r\n            };\r\n        case 'HIDE_SHOW_MODAL':\r\n            return {\r\n                ...state,\r\n                showInfoModal: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './reducer'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}